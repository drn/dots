#!/bin/bash

#
# Returns the current external ip if available. Uses failover endpoints for
# external ip retrieval if any services are unavailable.
#

# return cached ip if last modified is within threshold (60s)
last_modified="$(stat -f '%m' "$HOME/.ip" 2>/dev/null)"
[ -z "$last_modified" ] && last_modified=0
if (( "$last_modified" > $(($(date +%s) - 60)) )); then
  cat "$HOME/.ip"
  exit 0
fi

# list of ip retrieval services
services=(
  ifconfig.co
  bot.whatismyipaddress.com
  ipv4.icanhazip.com
  wtfismyip.com/text
  # only v4
  ipecho.net/plain
  ifconfig.me
  l2.io/ip
)

# retrieval services
ip="$(dig +short myip.opendns.com @resolver1.opendns.com 2>/dev/null)"
for service in "${services[@]}"; do
  [[ -n "$ip" ]] && break
  ip="$(curl -s4 "$service" 2>/dev/null)"
done

# cache external ip
if [ -n "$ip" ]; then
  echo "$ip" > "$HOME/.ip"
fi

# echo retrieved ip
echo "$ip"
