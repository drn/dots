[merge]
  tool = diffconflicts

[mergetool "diffconflicts"]
  cmd = nvim -c DiffConflicts \"$MERGED\" \"$BASE\" \"$LOCAL\" \"$REMOTE\"
  trustExitCode = true

[mergetool]
  keepBackup = false

[core]
  # default ignored files for OSX; see below
  excludesfile = ~/.gitignore
  editor = nvim -f
  preloadindex = true
  pager = diff-so-fancy | less --tabs=1,5 -R
  hooksPath = ~/.dots/git/hooks

[alias]
  up = upstream
  f = fetch-dynamic
  fa = fetch --all
  fo = fetch origin
  st = !"git --no-pager status; git --no-pager diff --stat"
  d = diff
  co = checkout
  rb = rebase
  cp = cherry-pick
  cm = commit
  cme = commit --allow-empty
  br = branch
  # given a username or an email address shows the name and email address of the author
  whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
  # sexier looking shortlog; git lg FROM..TO
  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
  count = shortlog -s -n -e
  # short version of cherry-pick
  pick = cherry-pick
  # show an ASCII version of the commit tree
  tree = !"git log --graph --decorate --oneline --all; git --no-pager diff --stat"
  t = !"git tree"
  tiny-tree = !"git log --graph --decorate --oneline; git --no-pager diff --stat"
  tt = !"git tiny-tree"
  # The wip allows for a quick way to add all new and modified files to the index, while cleaning the index from the files removed from the working tree.
  wip = !"git add -A; git ls-files --deleted -z | xargs -0 git rm; git commit -m \"wip\""
  # The unwip will restore the deleted files to the working tree!
  unwip = !"git log -n 1 | grep -q -c wip && git reset HEAD~1"
  # returns the current branch name
  me = rev-parse --abbrev-ref HEAD
  # pushes current branch to the specified remote, defaults to origin
  pm = !"git pushme"
  pmf = !"git pushme --force"
  # pushes current branch to the canonical path
  mm = !"git masterme"
  # delete current branch from upstream, origin, and locally
  km = !"git killme"
  # delete current branch to upstream/master and deletes the branch on success
  mmk = !"git masterme && git killme"
  # shorthand for fixup
  fu = !"git fixup"
  # shorthand for commit-all
  cma = !"git commit-all"
  # browse the current head on github
  browse = !"open https://github.com/$(git path)/commit/$(git rev-parse ${1:-$(echo HEAD)}) #"
  bro = !"git browse"
  # rebase on top of the canonical path
  rbm = rebase-master
  # hard reset to canonical path
  rhm = reset-hard-master
  # git branches
  brs = branches
  # print root git directory
  root = !"pwd"
  # show the diff stats of the latest commit
  stat = !"git --no-pager diff --stat HEAD^..HEAD"
  # git show aliases
  last = show
  la = show
  # fallback alias
  fb = fallback
  # reset --hard
  rh = reset --hard
  # git amend aliases
  amend = commit --amend
  a = commit --amend
  aa = amend-all
  aaa = amend-all-annotation
  # git semver alias
  ver = semver
  s = !"git sync"
  pt = push --tags
  ptu = push --tags upstream
  ta = tag-after
  rpu = remote prune upstream
  rpo = remote prune origin
  rp = !"git remote prune upstream 2>/dev/null || git remote prune origin"
  expire = reflog expire --expire-unreachable=now --all
  mt = mergetool
  rbc = rebase --continue
  rba = rebase --abort
  rf = refetch-tags
  cf = clean --force
  home = !"open https://github.com/$(git config github.user)"

[user]
  name = Darren Cheng
  email = darren@thanx.com

[github]
  user = drn

[credential]
  helper = osxkeychain

[color]
  ui = auto

[remotes]
  default = origin upstream

[push]
  default = matching

[advice]
  skippedCherryPicks = false
